1.postion: sticky;粘性定位元素（stickily positioned element）是计算后位置属性为 sticky 的元素
  使用条件
    1、父元素不能overflow:hidden或者overflow:auto属性。
    2、必须指定top、bottom、left、right4个值之一，否则只会处于相对定位
    3、父元素的高度不能低于sticky元素的高度
    4、sticky元素仅在其父元素内生效
2.react
    1.setSate书写的时候，可以直接穿一个带两个参数的函数，使得我们在重新修改state中值不用再定义变量来接收,直接和原来的值比较就可以了（每次的赋值会重新加载ui）
    2.props接收的值使用es6解构的方式来接收
      const { list,name  } = this.props
    3.定义的事件修改this指向的时候,不建议写在jsx中,而是写到 constructor里面
    4.ajax请求放在(componentDidMount)中,因为componentDidMount生命周期的话,打开只会渲染一次,这样会大大的提高了性能
    5.父子组件传值的时候,使用shouldComponentUpdate来判断父向子传的内容是否有变化,没变化的话,子组件就不需要渲染
 3.浏览器事件流
    DOM2级事件规定的事件流包括三个阶段：

    1、事件捕获阶段

    2、处于目标阶段

    3、事件冒泡阶段

    事件捕获阶段（Event Capturing）：
    按照事件捕获的思想，在此过程（click页面某元素）中，document对象会首先接收到click事件，然后事件沿着dom树依次向下，一直传播到实际目标，即div元素。但在事件流中的捕获阶段，实际目标div元素是不会接收到事件的，这就意味着没在捕获阶段，事件从document到再到后就停止了。（但IE9、Safari、Chrome、Firefox 和 Opera9.5 以及更高版本都会在捕获阶段触发事件对象上的事件）；下一个阶段是"处于目标"阶段，于是事件在发生，并在事件处理中被堪称冒泡阶段的一部分，最后，冒泡事件发生，事件又传播回文档。

    冒泡阶段（Event Bubbling）：
    事件开始时由最具体的元素（文档中嵌套层次最深的那个节点）接收，然后逐级向上传播到较为不具体的节点，即document对象。

    DOM2 与 DOM0区别

    DOM2级事件定义了两个方法，用于处理指定和删除事件处理程序的操作：

    ①.addEventListener()

    ②.removeEventListener()

    所有的DOM节点都包含这两个方法，而且接受三个参数：

    ①.要处理的事件名；

    ②.作为事件处理程序的函数；

    ③.一个 boolean 的值，如果值为true，表示在捕获阶段调用事件处理程序；如果是false，表示在冒泡阶段调用此事件处理程序。
